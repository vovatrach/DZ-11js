{"version":3,"sources":["webpack:///./js/timer.js","webpack:///./js/promice/task-1.js","webpack:///./js/promice/task-2.js","webpack:///./js/promice/task-3.js","webpack:///./js/color-switch.js"],"names":["refs","seconds","document","querySelector","minutes","hours","days","timer","pad","value","String","padStart","targetDate","Date","setInterval","time","currentTime","now","Math","floor","textContent","delay","ms","Promise","resolve","setTimeout","logger","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","makeTransaction","transaction","reject","min","max","random","id","logSuccess","logError","warn","amount","catch","colors","btnStartRef","btnStopRef","body","setRandomColor","color","length","style","backgroundColor","interval","addEventListener","disabled","clearInterval"],"mappings":"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","file":"main.be656d4efe3691c3e79e.js","sourcesContent":["const refs = {\r\n  seconds: document.querySelector(`span[data-value=\"days\"]`),\r\n  minutes: document.querySelector(`span[data-value=\"minutes\"]`),\r\n  hours: document.querySelector(`span[data-value=\"hours\"]`),\r\n  days: document.querySelector(`span[data-value=\"days\"]`),\r\n  timer: document.querySelector('.timer'),\r\n};\r\n\r\nconst timer = {\r\n  start() {\r\n    const targetDate = new Date('Dec 31, 2020');\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = targetDate - currentTime;\r\n      updateClockFace(deltaTime);\r\n    }, 1000);\r\n  },\r\n};\r\ntimer.start();\r\n\r\nfunction updateClockFace(time) {\r\n  const seconds = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n  const minutes = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const hours = pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n  );\r\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n\r\n  refs.timer.textContent = `${days}:${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n","const delay = ms => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger);\r\ndelay(1000).then(logger);\r\ndelay(1500).then(logger);\r\n","const users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  return new Promise(resolve => {\r\n    const updatedUsers = allUsers.map(user =>\r\n      user.name === userName ? { ...user, active: !user.active } : user,\r\n    );\r\n    resolve(updatedUsers);\r\n  });\r\n};\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);\r\n","const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({ id: transaction.id, time: delay });\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({ id, time }) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n","const colors = [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst refs = {\r\n  btnStartRef: document.querySelector('button[data-action=\"start\"]'),\r\n  btnStopRef: document.querySelector('button[data-action=\"stop\"]'),\r\n  body: document.querySelector('body'),\r\n};\r\n\r\nsetRandomColor = () => {\r\n  const color = colors[randomIntegerFromInterval(0, colors.length - 1)];\r\n  refs.body.style.backgroundColor = color;\r\n};\r\n\r\nlet interval = null;\r\n\r\nrefs.btnStartRef.addEventListener('click', () => {\r\n  interval = setInterval(() => setRandomColor(), 1000);\r\n  refs.btnStartRef.disabled = true;\r\n});\r\n\r\nrefs.btnStopRef.addEventListener('click', () => {\r\n  clearInterval(interval);\r\n  refs.btnStartRef.disabled = false;\r\n});\r\n"],"sourceRoot":""}